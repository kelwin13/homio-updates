name: Push firmware update

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Firmware version (якщо немає релізу, введи вручну, напр. 1.0.0)'
        required: false

jobs:
  push-firmware:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Get latest release version (if exists)
        id: latest
        run: |
          VERSION=$(curl -s https://api.github.com/repos/kelwin13/homio-updates/releases/latest | jq -r .tag_name)
          if [ "$VERSION" = "null" ] || [ -z "$VERSION" ]; then
            echo "⚠️ Релізів немає або тег відсутній."
            VERSION=""
          fi
          VERSION=${VERSION#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Resolve version
        id: resolve
        run: |
          if [ -n "${{ steps.latest.outputs.version }}" ]; then
            echo "version=${{ steps.latest.outputs.version }}" >> $GITHUB_OUTPUT
          elif [ -n "${{ github.event.inputs.version }}" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "❌ Не вдалося визначити версію. Вкажи її вручну при запуску."
            exit 1
          fi

      - name: Verify firmware.bin exists
        run: |
          if [ ! -f "firmware.bin" ]; then
            echo "❌ Файл firmware.bin не знайдено."
            exit 1
          fi
          if [ ! -s "firmware.bin" ]; then
            echo "❌ Файл firmware.bin має нульовий розмір."
            exit 1
          fi

      - name: Rename firmware with version
        run: |
          cp firmware.bin firmware-v${{ steps.resolve.outputs.version }}.bin

      - name: Calculate checksum
        id: checksum
        run: |
          CHECKSUM=$(sha256sum "firmware-v${{ steps.resolve.outputs.version }}.bin" | cut -d ' ' -f1)
          echo "checksum=$CHECKSUM" >> $GITHUB_OUTPUT

      - name: Generate firmware.json
        run: |
          echo '{
            "version": "'${{ steps.resolve.outputs.version }}'",
            "date": "'$(date +%Y-%m-%d)'",
            "url": "https://github.com/kelwin13/homio-updates/releases/download/v${{ steps.resolve.outputs.version }}/firmware-v${{ steps.resolve.outputs.version }}.bin",
            "checksum": "'${{ steps.checksum.outputs.checksum }}'",
            "latest": true,
            "notes": "Автоматичне оновлення прошивки"
          }' > firmware.json

      - name: Push to homio-updates
        run: |
          git config --global user.name "homio-bot"
          git config --global user.email "homiobot3@gmail.com"
          git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/kelwin13/homio-updates.git

          cp firmware.json homio-updates/
          cp firmware-v${{ steps.resolve.outputs.version }}.bin homio-updates/

          cd homio-updates
          git add firmware.json firmware-v${{ steps.resolve.outputs.version }}.bin
          git commit -m "Update firmware metadata v${{ steps.resolve.outputs.version }}" || echo "ℹ️ Немає змін для коміту"
          git push